{"version":3,"sources":["../src/index.ts","../src/components/Obj.tsx","../src/keyframes.ts"],"sourcesContent":["export { default as Obj } from \"./components/Obj\";\nexport type {\n   ObjProps,\n   FaceDef,\n   GlobalDef,\n   AnimationConfig,\n   FaceName,\n   BuiltInAnimName,\n} from \"./types\";\n","import React, { useMemo } from \"react\";\nimport type { CSSProperties, ReactNode } from \"react\";\nimport { FaceDef, GlobalDef, ObjProps, FaceName } from \"../types\";\nimport { toAnimationShorthand } from \"../keyframes\";\nimport \"../styles/obj.css\";\n\n/** Map face name -> transform so it sits on a rectangular prism */\nfunction faceTransform(name: string, w: number, h: number, d: number): string {\n   const z = d / 2;\n   switch (name as FaceName) {\n      case \"front\":\n         return `translate3d(-50%, -50%, ${z}px)`;\n      case \"back\":\n         return `translate3d(-50%, -50%, ${-z}px) rotateY(180deg)`;\n      case \"left\":\n         return `translate3d(-50%, -50%, 0) rotateY(-90deg) translateZ(${\n            w / 2\n         }px)`;\n      case \"right\":\n         return `translate3d(-50%, -50%, 0) rotateY(90deg) translateZ(${\n            w / 2\n         }px)`;\n      case \"top\":\n         return `translate3d(-50%, -50%, 0) rotateX(90deg) translateZ(${\n            h / 2\n         }px)`;\n      case \"bottom\":\n         return `translate3d(-50%, -50%, 0) rotateX(-90deg) translateZ(${\n            h / 2\n         }px)`;\n      // legacy/extra â€“ position near top/bottom, front/back edges\n      case \"top_front\":\n         return `translate3d(-50%, -50%, ${z / 2}px) rotateX(75deg)`;\n      case \"top_rear\":\n         return `translate3d(-50%, -50%, ${-z / 2}px) rotateX(105deg)`;\n      case \"bottom_front\":\n         return `translate3d(-50%, -50%, ${z / 2}px) rotateX(-75deg)`;\n      case \"bottom_rear\":\n         return `translate3d(-50%, -50%, ${-z / 2}px) rotateX(-105deg)`;\n      default:\n         return `translate3d(-50%, -50%, ${z}px)`;\n   }\n}\n\n/** Merge legacy CSS string + style object */\nfunction mergeStyles(inlineCSS?: string, style?: CSSProperties): CSSProperties {\n   const out: CSSProperties = { ...(style ?? {}) };\n   if (inlineCSS) {\n      // naive parser: split by ;, then key:value\n      inlineCSS\n         .split(\";\")\n         .map((s) => s.trim())\n         .filter(Boolean)\n         .forEach((rule) => {\n            const [k, v] = rule.split(\":\");\n            if (!k || !v) return;\n            const key = k\n               .trim()\n               .replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n            (out as any)[key] = v.trim();\n         });\n   }\n   return out;\n}\n\nfunction Face({\n   w,\n   h,\n   d,\n   face,\n   global,\n}: {\n   w: number;\n   h: number;\n   d: number;\n   face: FaceDef;\n   global?: GlobalDef;\n}) {\n   const base = useMemo(\n      () => mergeStyles(global?.css, global?.style),\n      [global]\n   );\n   const merged = useMemo(\n      () => ({ ...base, ...mergeStyles(face.css, face.style) }),\n      [base, face.css, face.style]\n   );\n\n   const content: ReactNode = face.body ?? global?.body ?? null;\n\n   return (\n      <div\n         className={`anim3d-face ${face.className ?? \"\"}`}\n         style={{\n            transform: faceTransform(face.name, w, h, d),\n            ...merged,\n         }}\n         data-face={face.name}\n      >\n         {typeof content === \"string\" ? <span>{content}</span> : content}\n      </div>\n   );\n}\n\nconst Obj: React.FC<ObjProps> = ({\n   width = 160,\n   height = 160,\n   depth = 150,\n   perspective = 500,\n   perspectiveOrigin = \"50% 50%\",\n   faces = [\n      { name: \"front\", body: \"FRONT\" },\n      { name: \"back\", body: \"BACK\" },\n      { name: \"left\", body: \"LEFT\" },\n      { name: \"right\", body: \"RIGHT\" },\n      { name: \"top\", body: \"TOP\" },\n      { name: \"bottom\", body: \"BOTTOM\" },\n   ],\n   global,\n   anim1,\n   anim2,\n   showCenterDiv = false,\n   className,\n   style,\n}) => {\n   const resolvedAnim1 = toAnimationShorthand(anim1);\n   const resolvedAnim2 = toAnimationShorthand(anim2);\n   const animation = [resolvedAnim1, resolvedAnim2].filter(Boolean).join(\", \");\n\n   const stageStyle: CSSProperties = {\n      perspective: `${perspective}px`,\n      perspectiveOrigin,\n   };\n\n   const wrapperStyle: CSSProperties = {\n      // consumed by CSS var\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      \"--obj-w\": `${width}px`,\n      \"--obj-h\": `${height}px`,\n      width,\n      height,\n      \"animation\": animation || undefined,\n   };\n\n   return (\n      <div\n         className={`anim3d-stage ${className ?? \"\"}`}\n         style={{ ...stageStyle, ...style }}\n      >\n         <div className='anim3d-wrapper' style={wrapperStyle as any}>\n            {showCenterDiv && <div className='anim3d-center' />}\n            {faces.map((f, i) => (\n               <Face\n                  key={`${f.name}-${i}`}\n                  w={width}\n                  h={height}\n                  d={depth}\n                  face={f}\n                  global={global}\n               />\n            ))}\n         </div>\n      </div>\n   );\n};\n\nexport default Obj;\nexport { Obj };\n","import type { AnimationConfig } from \"./types\";\n\nlet counter = 0;\nconst uid = () => (++counter).toString(36);\n\n/** Create (or reuse) a <style> tag for dynamic keyframes */\nfunction ensureStyleTag(): HTMLStyleElement {\n   let tag = document.getElementById(\n      \"anim3d-keyframes\"\n   ) as HTMLStyleElement | null;\n   if (!tag) {\n      tag = document.createElement(\"style\");\n      tag.id = \"anim3d-keyframes\";\n      document.head.appendChild(tag);\n   }\n   return tag;\n}\n\nfunction inject(css: string) {\n   if (typeof document === \"undefined\") return; // SSR\n   const tag = ensureStyleTag();\n   tag.appendChild(document.createTextNode(css));\n}\n\n/** Keyframes text for built-ins */\nfunction builtInKeyframes(name: string, cfg: AnimationConfig) {\n   const hi = cfg.degreesHi ?? 15;\n   const lo = cfg.degreesLow ?? -15;\n   switch (name) {\n      case \"Y360\":\n         return `@keyframes Y360 { from { transform: rotateY(0deg) } to { transform: rotateY(360deg) } }`;\n      case \"X360\":\n         return `@keyframes X360 { from { transform: rotateX(0deg) } to { transform: rotateX(360deg) } }`;\n      case \"Z360\":\n         return `@keyframes Z360 { from { transform: rotateZ(0deg) } to { transform: rotateZ(360deg) } }`;\n      case \"rockY\":\n         return `@keyframes rockY { 0%{ transform: rotateY(${lo}deg) } 50%{ transform: rotateY(${hi}deg) } 100%{ transform: rotateY(${lo}deg) } }`;\n      case \"rockX\":\n         return `@keyframes rockX { 0%{ transform: rotateX(${lo}deg) } 50%{ transform: rotateX(${hi}deg) } 100%{ transform: rotateX(${lo}deg) } }`;\n      default:\n         // Custom names: let authors supply their own @keyframes in global CSS with that name.\n         return \"\";\n   }\n}\n\n/** Returns a concrete animation-name and ensures keyframes exist (for built-ins) */\nexport function resolveAnimation(cfg?: AnimationConfig): string | null {\n   if (!cfg) return null;\n   const name = cfg.name;\n   const builtIn = builtInKeyframes(name, cfg);\n   if (builtIn) {\n      // Ensure single injection per built-in name\n      const marker = `/*kf-${name}*/`;\n      if (typeof document !== \"undefined\") {\n         const tag = ensureStyleTag();\n         if (!tag.innerHTML.includes(marker)) {\n            inject(`${builtIn}\\n${marker}`);\n         }\n      }\n      return name; // use built-in name as animation-name\n   }\n   // custom: use author-provided @keyframes by name\n   return name;\n}\n\n/** Build the full CSS animation shorthand from a config and resolved name */\nexport function toAnimationShorthand(cfg?: AnimationConfig): string | null {\n   const name = resolveAnimation(cfg);\n   if (!cfg || !name) return null;\n   const dur = (cfg.duration ?? 10) + \"s\";\n   const delay = (cfg.delay ?? 0) + \"s\";\n   const iter = cfg.iterationCount ?? \"infinite\";\n   const dir = cfg.direction ?? \"normal\";\n   const timing = cfg.timing ?? \"linear\";\n   const fill = cfg.fillMode ?? \"forwards\";\n   const play = cfg.animationPlayState ?? \"running\";\n   // name duration timing delay iteration-count direction fill-mode play-state\n   return `${name} ${dur} ${timing} ${delay} ${iter} ${dir} ${fill} ${play}`;\n}\n"],"mappings":"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","names":[]}